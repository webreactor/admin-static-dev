//
// Navbars
// --------------------------------------------------

// Wrapper and base class
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
    position:      relative;
    min-height:    @navbar-height; // Ensure a navbar always shows (e.g., without a .navbar-brand in collapsed mode)
    margin-bottom: @navbar-margin-bottom;
    border:        1px solid transparent;
    border-radius: @navbar-border-radius;

    // Prevent floats from breaking the navbar
    &:extend(.clearfix all);
}

// Navbar heading
//
// Groups `.navbar-brand` and `.navbar-toggle` into a single component for easy
// styling of responsive aspects.

.navbar-header {
    &:extend(.clearfix all);
}

//
// Navbar alignment options
//
// Display the navbar across the entirety of the page or fixed it to the top or
// bottom of the page.

// Static top (unfixed, but 100% wide) navbar
.navbar-static-top {
    z-index:       @zindex-navbar;
    border-radius: 0;
    border-width:  0 0 1px;
}

// Fix the top/bottom navbars when screen real estate supports it
.navbar-fixed-top,
.navbar-fixed-bottom {
    border-radius: 0;
    position:      fixed;
    right:         0;
    left:          0;
    z-index:       @zindex-navbar-fixed;
}

.navbar-fixed-top {
    top:          0;
    border-width: 0 0 1px;
}

.navbar-fixed-bottom {
    bottom:        0;
    margin-bottom: 0; // override .navbar defaults
    border-width:  1px 0 0;
}

// Brand/project name

.navbar-brand {
    float:       left;
    padding:     @navbar-padding-vertical @navbar-padding-horizontal;
    font-size:   @font-size-large;
    line-height: @line-height-computed;
    height:      @navbar-height;

    &:hover,
    &:focus {
        text-decoration: none;
    }

    > img {
        display: block;
    }

    .navbar > .container &,
    .navbar > .container-fluid & {
        margin-left: -@navbar-padding-horizontal;
    }
}

// Navbar nav links
//
// Builds on top of the `.nav` components with its own modifier class to make
// the nav the full height of the horizontal nav (above 768px).

.navbar-nav {
    float:  left;
    margin: 0;

    > li {
        float: left;

        > a {
            padding-top:    @navbar-padding-vertical;
            padding-bottom: @navbar-padding-vertical;
            line-height:    @line-height-computed;
        }
    }
}

// Navbar form
//
// Extension of the `.form-inline` with some extra flavor for optimum display in
// our navbars.

.navbar-form {
    margin-left:  0;
    margin-right: 0;
    padding:      0 @navbar-padding-horizontal;
    border:       0;
    @shadow: inset 0 1px 0 rgba(255, 255, 255, .1), 0 1px 0 rgba(255, 255, 255, .1);
    width:        auto;

    // Mixin behavior for optimum display
    .form-inline();

    // Vertically center in expanded, horizontal navbar
    .navbar-vertical-align(@input-height-base);
}

// Dropdown menus

// Menu position and menu carets
.navbar-nav > li > .dropdown-menu {
    margin-top: 0;
    .border-top-radius(0);
}

// Menu position and menu caret support for dropups via extra dropup class
.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu {
    margin-bottom: 0;
    .border-top-radius(@navbar-border-radius);
    .border-bottom-radius(0);
}

// Buttons in navbars
//
// Vertically center a button within a navbar (when *not* in a form).

.navbar-btn {
    .navbar-vertical-align(@input-height-base);

    &.btn-sm {
        .navbar-vertical-align(@input-height-small);
    }
    &.btn-xs {
        .navbar-vertical-align(22);
    }
}

// Text in navbars
//
// Add a class to make any element properly align itself vertically within the navbars.

.navbar-text {
    float:        left;
    margin-left:  @navbar-padding-horizontal;
    margin-right: @navbar-padding-horizontal;

    .navbar-vertical-align(@line-height-computed);
}

// Component alignment
//
// Repurpose the pull utilities as their own navbar utilities to avoid specificity
// issues with parents and chaining. Only do this when the navbar is uncollapsed
// though so that navbar contents properly stack and align in mobile.
//
// Declared after the navbar components to ensure more specificity on the margins.

.navbar-left {
    .pull-left();
}

.navbar-right {
    .pull-right();
    margin-right: -@navbar-padding-horizontal;

    ~ .navbar-right {
        margin-right: 0;
    }
}

// Alternate navbars
// --------------------------------------------------

// Default navbar
.navbar-default {
    background-color: @navbar-default-bg;
    border-color:     @navbar-default-border;

    .navbar-brand {
        color: @navbar-default-brand-color;
        &:hover,
        &:focus {
            color:            @navbar-default-brand-hover-color;
            background-color: @navbar-default-brand-hover-bg;
        }
    }

    .navbar-text {
        color: @navbar-default-color;
    }

    .navbar-nav {
        > li > a {
            color: @navbar-default-link-color;

            &:hover,
            &:focus {
                color:            @navbar-default-link-hover-color;
                background-color: @navbar-default-link-hover-bg;
            }
        }
        > .active > a {
            &,
            &:hover,
            &:focus {
                color:            @navbar-default-link-active-color;
                background-color: @navbar-default-link-active-bg;
            }
        }
        > .disabled > a {
            &,
            &:hover,
            &:focus {
                color:            @navbar-default-link-disabled-color;
                background-color: @navbar-default-link-disabled-bg;
            }
        }
    }

    .navbar-toggle {
        border-color: @navbar-default-toggle-border-color;
        &:hover,
        &:focus {
            background-color: @navbar-default-toggle-hover-bg;
        }
        .icon-bar {
            background-color: @navbar-default-toggle-icon-bar-bg;
        }
    }

    .navbar-form {
        border-color: @navbar-default-border;
    }

    // Dropdown menu items
    .navbar-nav {
        // Remove background color from open dropdown
        > .open > a {
            &,
            &:hover,
            &:focus {
                background-color: @navbar-default-link-active-bg;
                color:            @navbar-default-link-active-color;
            }
        }
    }

    // Links in navbars
    //
    // Add a class to ensure links outside the navbar nav are colored correctly.

    .navbar-link {
        color: @navbar-default-link-color;
        &:hover {
            color: @navbar-default-link-hover-color;
        }
    }

    .btn-link {
        color: @navbar-default-link-color;
        &:hover,
        &:focus {
            color: @navbar-default-link-hover-color;
        }
        &[disabled],
        fieldset[disabled] & {
            &:hover,
            &:focus {
                color: @navbar-default-link-disabled-color;
            }
        }
    }
}

// Inverse navbar

.navbar-inverse {
    background-color: @navbar-inverse-bg;
    border-color:     @navbar-inverse-border;

    .navbar-brand {
        color: @navbar-inverse-brand-color;
        &:hover,
        &:focus {
            color:            @navbar-inverse-brand-hover-color;
            background-color: @navbar-inverse-brand-hover-bg;
        }
    }

    .navbar-text {
        color: @navbar-inverse-color;
    }

    .navbar-nav {
        > li > a {
            color: @navbar-inverse-link-color;

            &:hover,
            &:focus {
                color:            @navbar-inverse-link-hover-color;
                background-color: @navbar-inverse-link-hover-bg;
            }
        }
        > .active > a {
            &,
            &:hover,
            &:focus {
                color:            @navbar-inverse-link-active-color;
                background-color: @navbar-inverse-link-active-bg;
            }
        }
        > .disabled > a {
            &,
            &:hover,
            &:focus {
                color:            @navbar-inverse-link-disabled-color;
                background-color: @navbar-inverse-link-disabled-bg;
            }
        }
    }

    // Darken the responsive nav toggle
    .navbar-toggle {
        border-color: @navbar-inverse-toggle-border-color;
        &:hover,
        &:focus {
            background-color: @navbar-inverse-toggle-hover-bg;
        }
        .icon-bar {
            background-color: @navbar-inverse-toggle-icon-bar-bg;
        }
    }

    .navbar-form {
        border-color: darken(@navbar-inverse-bg, 7%);
    }

    // Dropdowns
    .navbar-nav {
        > .open > a {
            &,
            &:hover,
            &:focus {
                background-color: @navbar-inverse-link-active-bg;
                color:            @navbar-inverse-link-active-color;
            }
        }
    }

    .navbar-link {
        color: @navbar-inverse-link-color;
        &:hover {
            color: @navbar-inverse-link-hover-color;
        }
    }

    .btn-link {
        color: @navbar-inverse-link-color;
        &:hover,
        &:focus {
            color: @navbar-inverse-link-hover-color;
        }
        &[disabled],
        fieldset[disabled] & {
            &:hover,
            &:focus {
                color: @navbar-inverse-link-disabled-color;
            }
        }
    }
}
